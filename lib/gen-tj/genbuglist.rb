#
# named_query2tji.rb
#
# Convert list of bugs (generated by named query) to TJ include
#
# Usage:
#   named_query2tji <name-of-query>
#

require 'rubygems'
require 'dm-bugzilla-adapter'

# extend DataMapper Bug
class Bug
  def to_tj
    a = @assigned_to.split('@').first.gsub(".","_")
    s = @summary.gsub("\"","\\\"")
    s = "task bug_#{@id} \"#{s}\" {\n"
    s << "  allocate #{a}\n"
    s << "  effort 2d\n"
    s << "}\n"
    s
  end
end

module GenTJ
  class GenBuglist
    def GenBuglist.run query
      DataMapper::Logger.new(STDOUT, :debug)
      keeper = DataMapper.setup(:default, :adapter => 'bugzilla',
				:url  => 'https://bugzilla.novell.com')
      require 'bugzilla/named_query'
      DataMapper.finalize

      f = NamedQuery.get(query)

      bugs = f.bugs

      # sort bugs according to priority

      prios = {}

      bugs.each do |bug|
	prios[bug.priority] ||= []
	prios[bug.priority] << bug
      end

      puts "task bugs \"Bugs\" {"
      prios.each do |k,v|
	pval = "_other"
	if k =~ /P(\d)+.*/
	  pval = $1
	end
	prio = 1000 - pval * 100 # P1 -> 900, P2 -> 800, ...
	puts "task p#{pval}_bugs \"Bugs with prio #{k}\" {"
	puts "priority #{prio}"
	v.each do |bug|
	  puts bug.to_tj
	end
	puts "}"
      end
      puts "}"
    end
  end
end
